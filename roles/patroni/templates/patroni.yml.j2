# --------------------------------------------------------------------------
scope: rebrain # должно быть одинаковым на всех нодах
namespace: /cluster/ # должно быть одинаковым на всех нодах
name: {{ansible_hostname}} # должно быть разным на всех нодах

restapi:
  listen: {{ansible_default_ipv4.address}}:8008 # адрес той ноды, в которой находится этот файл
  connect_address: {{ansible_default_ipv4.address}}:8008 # адрес той ноды, в которой находится этот файл

etcd:
  hosts: {{etcd_ip_1}}:2379,{{etcd_ip_2}}:2379,{{etcd_ip_3}}:2379
 # перечислите здесь все ваши ноды, в случае если вы устанавливаете etcd на них же

# this section (bootstrap) will be written into Etcd:/<namespace>/<scope>/config after initializing new cluster
# and all other cluster members will use it as a `global configuration`
bootstrap:
  dcs:
    ttl: 30
    loop_wait: 10
    retry_timeout: 10
{% if ansible_hostname != "pgsql-replica-1" %}
    nosync: true
    maximum_lag_on_failover: 1048576
{% endif %}
{% if ansible_hostname == "pgsql-replica-1" %}
#    maximum_lag_on_syncnode: 1048570
    synchronous_mode: true
{% endif %}
#    primary_start_timeout: 45
{% if ansible_hostname == "pgsql-replica-3" %}
    standby_cluster:
      host: {{ ansible_host }}
      port: 5432
{% endif %}
    postgresql:
      use_pg_rewind: true
      use_slots: true
      parameters:
      wal_level: replica 
      hot_standby: "on" 
      max_wal_senders: 5 
      max_replication_slots: 5 
      wal_log_hints: "on" 
      archive_mode: "on" 
      archive_timeout: 600s
      archive_command: "cp -f %p /db/pg_archived/%f"
      recovery_conf:
        restore_command: "cp -f /db/pg_archived/%f %p"
  initdb:
  - encoding: UTF8
  - data-checksums
  - locale: en_US.UTF8
  # init pg_hba.conf должен содержать адреса ВСЕХ машин, используемых в кластере
  pg_hba:
#  - host replication replicator ::1/128 md5
#  - host replication replicator 127.0.0.1/8 md5
  - host replication replicator {{patroni_ip_1}}/24 md5
  - host replication replicator {{patroni_ip_2}}/24 md5
  - host replication replicator {{patroni_ip_3}}/24 md5
  - host replication replicator {{patroni_ip_4}}/24 md5
#  - host all root 0.0.0.0/0 md5
  - host all all 0.0.0.0/0 scram-sha-256
  users:
    rebrain_admin:
      password: rebrain_admin
      options:
      - superuser
      - createrole
      - createdb
postgresql:
  listen: {{ansible_default_ipv4.address}}:5432 # адрес той ноды, в которой находится этот файл
  connect_address: {{ansible_default_ipv4.address}}:5432 # адрес той ноды, в которой находится этот файл
  data_dir: /etc/patroni/pgdata # эту директорию создаст скрипт, описанный выше и установит нужные права
  bin_dir:  /usr/lib/postgresql/16/bin # укажите путь до вашей директории с postgresql
  pgpass: /tmp/pgpass0
  authentication:
    replication:
      username: replicator
      password: replicator
    superuser:
      username: root
      password: root
  create_replica_methods:
  - basebackup
  basebackup:
    checkpoint: 'fast'

#    basebackup:
#      checkpoint: 'fast'
  parameters:
    unix_socket_directories: '/var/run/postgresql'
    external_pid_file: '/var/run/postgresql/16-main.pid'
  logging_collector: "on" 
  log_directory: "/var/log/postgresql"
  log_filename: "postgresql-16-main.log"
{% if ansible_hostname == "pgsql-master" %}
tags:
  failover_priority: 100
{% endif %}
{% if ansible_hostname == "pgsql-replica-1" %}
tags:
  failover_priority: 9
{% endif %}
{% if ansible_hostname == "pgsql-replica-2" %}
tags:
  failover_priority: 8
{% endif %}
{% if ansible_hostname == "pgsql-replica-3" %}
tags:
  failover_priority: 7
{% endif %}

